name: build
on:
  pull_request:
    branches:
      - '**'
  workflow_dispatch:
    inputs:
      branch_service:
        description: 'Service branch'
        required: true
        default: 'master'
      branch_authorization:
        description: 'Authorization branch'
        required: true
        default: 'master'
      branch_gateway:
        description: 'Gateway branch'
        required: true
        default: 'master'
      branch_integration:
        description: 'Integration branch'
        required: true
        default: 'master'
      branch_ui:
        description: 'UI branch'
        required: true
        default: 'master'
env:
   MAVEN_OPTS: -Xmx1g
jobs:
   build:
      runs-on: ubuntu-latest
      steps:
      -  name: Get current date
         id: date
         run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      -  uses: actions/checkout@v2
      -  name: Set up JDK 1.8
         uses: actions/setup-java@v1
         with:
            java-version: 1.8
      -  name: Cache Maven packages
         uses: actions/cache@v2
         with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v14
        with:
           repositories: '[{ "id": "repository.spring.milestone", "url": "https://repo.spring.io/milestone" }]'
      -  name: Checkout exemple service
         uses: actions/checkout@v2
         with:
            path: exemple-service
            repository: doudouchat/exemple-service
            ref: ${{ github.event.inputs.branch_service }}
      -  name: Checkout exemple authorization
         uses: actions/checkout@v2
         with:
            path: exemple-authorization
            repository: doudouchat/exemple-authorization
            ref: ${{ github.event.inputs.branch_authorization }}
      -  name: Checkout exemple gateway
         uses: actions/checkout@v2
         with:
            path: exemple-gateway
            repository: doudouchat/exemple-gateway
            ref: ${{ github.event.inputs.branch_gateway }}
      -  name: Checkout exemple integration
         uses: actions/checkout@v2
         with:
            path: exemple-integration
            repository: doudouchat/exemple-integration
            ref: ${{ github.event.inputs.branch_integration }}
      -  name: Get yarn cache directory path
         id: yarn-cache-dir-path
         run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      -  uses: actions/cache@v2
         id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
         with:
            path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
               ${{ runner.os }}-yarn-
      -  name: Use Node.js 14.17.3
         uses: actions/setup-node@v1
         with:
            node-version: 14.17.3
      -  uses: borales/actions-yarn@v2.0.0
         with:
            cmd: install
      -  name: Checkout exemple ui
         uses: actions/checkout@v2
         with:
            path: exemple-ui
            repository: doudouchat/exemple-ui
            ref: ${{ github.event.inputs.branch_ui }}
      -  name: launch zookeeper
         run: docker-compose up -d zookeeper
      -  name: check zookeeper
         run: ./wait-for-container-ready.sh exemple-zookeeper
      -  name: launch hazelcast
         run: docker-compose up -d hazelcast
      -  name: check hazelcast
         if: ${{ false }}
         run: ./wait-for-container-ready.sh exemple-hazelcast
      -  name: copy sql
         run: |
            mkdir resources
            cp -r ${{ github.workspace }}/exemple-integration/src/test/resources/cassandra resources/cassandra
      -  name: build docker exemple integration
         run: docker build -t exemple-test .
      -  name: launch test
         run: docker-compose up -d cassandra
      -  name: check test
         run: ./wait-for-container-ready.sh exemple-test
      -  run: docker container exec exemple-test cqlsh --debug -f /usr/local/tmp/cassandra/schema.cql
      -  run: docker container exec exemple-test cqlsh --debug -f /usr/local/tmp/cassandra/exec.cql
      -  name: Build exemple authorization
         run: mvn -f ${{ github.workspace }}/exemple-authorization clean install -Dmaven.test.skip=true
      -  name: build docker exemple authorization
         run: docker build -t exemple-authorization --build-arg VERSION_TOMCAT=9.0.65-jdk8-openjdk ${{ github.workspace }}/exemple-authorization
      -  name: launch authorization
         run: docker-compose up -d authorization
      -  name: check authorization
         run: ./wait-for-container-ready.sh exemple-authorization
      -  name: Build exemple service
         run: mvn -f ${{ github.workspace }}/exemple-service clean install -Dmaven.test.skip=true
      -  name: build docker exemple service
         run: docker build -t exemple-service --build-arg VERSION_TOMCAT=9.0.65-jdk8-openjdk ${{ github.workspace }}/exemple-service
      -  name: launch service
         run: docker-compose up -d service
      -  name: check service
         run: ./wait-for-container-ready.sh exemple-service
      -  name: Build exemple gateway
         run: mvn -f ${{ github.workspace }}/exemple-gateway clean install -Dmaven.test.skip=true
      -  name: build docker exemple gateway
         run: docker build -t exemple-gateway --build-arg VERSION_OPENJDK=8-jdk-buster ${{ github.workspace }}/exemple-gateway
      -  name: launch gateway
         run: docker-compose up -d gateway
      -  name: check gateway
         run: ./wait-for-container-ready.sh exemple-gateway
      -  name: Build exemple integration
         run: mvn -f ${{ github.workspace }}/exemple-integration clean install
      -  name: test exemple integration by gateway
         run: mvn -f ${{ github.workspace }}/exemple-integration clean verify -Pit -Dauthorization.port=8086 -Dapplication.port=8086 -Dzookeeper.port=10024 -Dhazelcast.port=5706
      -  name: test exemple integration direct
         run: mvn -f ${{ github.workspace }}/exemple-integration clean verify -Pit -Dauthorization.port=8090 -Dapplication.port=8080 -Dzookeeper.port=10024 -Dhazelcast.port=5706
      -  name: launch gateway
         run: docker-compose -f docker-compose.yml -f docker-compose.browser.yml up -d gateway
      -  name: check gateway
         run: ./wait-for-container-ready.sh exemple-gateway
      -  name: install exemple ui
         working-directory: ${{ github.workspace }}/exemple-ui/exemple-ui-front
         run: yarn --immutable
      -  name: build exemple ui
         working-directory: ${{ github.workspace }}/exemple-ui/exemple-ui-front
         run: npm run-script build
      -  name: test exemple ui
         working-directory: ${{ github.workspace }}/exemple-ui/exemple-ui-front
         run: |
          CHROME_VERSION=$(google-chrome --version | grep -ioE "[0-9.]{10,20}")
          echo chrome version is $CHROME_VERSION
          node_modules/.bin/webdriver-manager update --versions.chrome $CHROME_VERSION
          npm run-script e2e -- --webdriver-update=false
      -  name: display logs hazelcast
         if: ${{ always() }}
         run: docker container logs exemple-hazelcast
      -  name: display logs zookeeper
         if: ${{ always() }}
         run: docker container logs exemple-zookeeper
      -  name: display logs cassandra
         if: ${{ always() }}
         run: docker container logs exemple-test
      -  name: display logs service
         if: ${{ failure() }}
         run: docker container logs exemple-service
      -  name: display logs authorization
         if: ${{ failure() }}
         run: docker container logs exemple-authorization
      -  name: display logs gateway
         if: ${{ failure() }}
         run: docker container logs exemple-gateway
      -  name: display logs service
         if: ${{ failure() }}
         run: docker container exec exemple-service cat logs/archive/exemple_service.${{ steps.date.outputs.date }}.log
      -  name: display logs authorization
         if: ${{ failure() }}
         run: docker container exec exemple-authorization cat logs/archive/exemple_authorization.${{ steps.date.outputs.date }}.log
      -  name: display logs gateway
         if: ${{ failure() }}
         run: docker container exec exemple-gateway cat tmp/logs/archive/exemple_gateway.${{ steps.date.outputs.date }}.log
