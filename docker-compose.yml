version: "3.5"
services:
  cassandra:
    container_name: exemple-test
    image: exemple-test
    networks:
    - test
    environment:
    - HEAP_NEWSIZE=1M
    - MAX_HEAP_SIZE=512m
    ports:
    - 9042:9042
    volumes:
    - ./resources/cassandra:/usr/local/tmp/cassandra
    - ./conf/cassandra:/usr/local/etc/cassandra
    - ./data/cassandra:/var/lib/cassandra
    healthcheck:
      test: ["CMD", "sh", "/usr/local/etc/cassandra/healthcheck_cassandra.sh"]
      interval: 30s
      start_period: 30s
  zookeeper:
    container_name: exemple-zookeeper
    image: zookeeper:3.8.0
    restart: always
    networks:
    - test
    environment:
    - ZOO_4LW_COMMANDS_WHITELIST=srvr, ruok
    ports:
    - 10024:2181
    volumes:
    - ./conf/zookeeper:/usr/local/etc/zookeeper
    - ./data/zookeeper:/data
    hostname: zookeeper
    healthcheck:
      test: ["CMD", "sh", "/usr/local/etc/zookeeper/healthcheck_zookeeper.sh"]
      interval: 10s
      start_period: 5s
  hazelcast:
    container_name: exemple-hazelcast
    image: hazelcast/hazelcast:4.2.5
    networks:
    - test
    ports:
     - 5706:5701
    volumes:
    - ./conf/hazelcast:/usr/local/etc/hazelcast
    environment:
    - "JAVA_OPTS=-Dhazelcast.config=/usr/local/etc/hazelcast/hazelcast.yaml"
    healthcheck:
      test: ["CMD", "curl", "-f", "-H", "accept:application/json", "http://172.17.0.1:5706/hazelcast/health/ready"]
      interval: 30s
      start_period: 30s
  kafka:
    container_name: exemple-service-kafka
    image: wurstmeister/kafka:2.12-2.1.0
    networks:
    - service
    ports:
    - 10025:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:10024
      KAFKA_ADVERTISED_PORT: 9092
  authorization:
    container_name: exemple-authorization
    image: exemple-authorization
    networks:
    - test
    - authorization
    environment:
    - "CATALINA_OPTS=-Dlogging.config=file:/usr/local/tomcat/etc/logback.xml -Dhazelcast.config=/usr/local/tomcat/etc/hazelcast.yaml -Dhazelcast.client.config=/usr/local/tomcat/etc/hazelcast-client.yaml"
    - "JAVA_OPTS=-Xms256m -Xmx512m -XX:MetaspaceSize=128m"
    - "JPDA_ADDRESS=8000"
    - "JPDA_TRANSPORT=dt_socket"
    entrypoint: /usr/local/tomcat/bin/catalina.sh jpda run
    ports:
    - 8090:8080
    - 9090:8000
    volumes:
    - ./conf/authorization:/usr/local/tomcat/etc
    healthcheck:
      test: ["CMD", "curl", "-f", "-H", "accept:application/json", "http://localhost:8080/ExempleAuthorization/actuator/health"]
      interval: 30s
      start_period: 30s
  service:
    container_name: exemple-service
    image: exemple-service
    networks:
    - test
    - authorization
    - service
    environment:
    - "CATALINA_OPTS=-Dlogging.config=file:/usr/local/tomcat/etc/logback.xml -Dhazelcast.client.config=/usr/local/tomcat/etc/hazelcast.yaml"
    - "JAVA_OPTS=-Xms256m -Xmx512m -XX:MetaspaceSize=128m"
    - "JPDA_ADDRESS=8000"
    - "JPDA_TRANSPORT=dt_socket"
    entrypoint: /usr/local/tomcat/bin/catalina.sh jpda run
    ports:
    - 8080:8080
    - 5705:5705
    - 9080:8000
    volumes:
    - ./conf/service:/usr/local/tomcat/etc
    healthcheck:
      test: ["CMD", "curl", "-f", "-H", "accept:application/json", "http://localhost:8080/ExempleService/actuator/health"]
      interval: 30s
      start_period: 30s
  gateway:
    container_name: exemple-gateway
    image: exemple-gateway
    networks:
    - authorization
    - service
    environment:
    - "--spring.config.location=/usr/local/etc/gateway/exemple-gateway.yml"
    - "--server.servlet.context-path=/"
    - "JAVA_OPTS=-Xms256m -Xmx1g"
    - "JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=n"
    ports:
    - 8086:8080
    - 9086:8000
    volumes:
    - ./conf/gateway:/usr/local/etc/gateway
    healthcheck:
      test: ["CMD", "curl", "-f", "-H", "accept:application/json", "http://localhost:8080/actuator/health"]
      interval: 30s
      start_period: 30s
networks:
  test:
    name: exemple-test
    driver: bridge
  authorization:
    driver: bridge
    name: exemple-authorization
  service:
    driver: bridge
    name: exemple-service